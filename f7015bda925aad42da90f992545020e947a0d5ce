{
  "comments": [
    {
      "key": {
        "uuid": "ee0461f6_3af43611",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1797
      },
      "writtenOn": "2022-04-14T10:30:42Z",
      "side": 1,
      "message": "Out of curiosity, suppose you\u0027ve tested this on some of our ref HW platforms? Does it work will all kind of planes? \n\nI have a few questions, but I suppose this aren\u0027t really use-cases because the lease manager is basically in between clients and you don\u0027t really have  a local client trying to use the drm nodes, before or after. \n\n- Will the kernel let you create the lease if there\u0027s another user/client already using it?\n\n- Will the kernel let you use the other planes for that CRTC? The assumption here is that another client is using the planes on a different CRTC from a lease, and another client attempts to use a CRTC only to find out  that it has just the primary plane for instance (with the overlay being leased to another CRTC).",
      "revId": "f7015bda925aad42da90f992545020e947a0d5ce",
      "serverId": "2db66874-6d0c-4434-a3ad-56d904acc56e",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8278365d_64cfedd6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 163
      },
      "writtenOn": "2022-04-15T07:22:20Z",
      "side": 1,
      "message": "Marius, thank you for your comments.\n\n\u003e Out of curiosity, suppose you\u0027ve tested this on some of our ref HW platforms? \n\nYes, I\u0027ve tested this on RPi4.  You need the newer kernel version (5.15) on the AGL \"next\" branch to have shared planes. Currently the RPi kernel on \"master\" uses the older vc4-fkms-v3d driver that maps all overlay planes for exclusive access from the various CRTCs.\n\n\u003e Does it work will all kind of planes? \nAh, drm-lease-manager doesn\u0027t use universal planes, so primary and cursor planes are assigned by the kernel.  This setting is only used for overlay planes. I\u0027ll update the description to make it more explicit. Maybe it\u0027s a good idea to change the configuration key from `planes` to `overlay_planes` or `overlays`.\n\n\u003e \n\u003e I have a few questions, but I suppose this aren\u0027t really use-cases because the lease manager is basically in between clients and you don\u0027t really have  a local client trying to use the drm nodes, before or after. \n\u003e \n\u003e - Will the kernel let you create the lease if there\u0027s another user/client already using it?\n\nThe kernel will not, but before that the drm-lease-manager will deny your request to get a lease if it is in use.\n\n\u003e \n\u003e - Will the kernel let you use the other planes for that CRTC? The assumption here is that another client is using the planes on a different CRTC from a lease, and another client attempts to use a CRTC only to find out  that it has just the primary plane for instance (with the overlay being leased to another CRTC).\n\nIf you try to assign the same overlay plane to two different leases in the configuration file, a client that tries to access the plane via a different lease while it is in use will be denied.",
      "parentUuid": "ee0461f6_3af43611",
      "revId": "f7015bda925aad42da90f992545020e947a0d5ce",
      "serverId": "2db66874-6d0c-4434-a3ad-56d904acc56e",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7402dd6d_6ee13557",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1797
      },
      "writtenOn": "2022-04-15T08:20:42Z",
      "side": 1,
      "message": "\u003e shared planes\n\nI haven\u0027t followed the code, but that bitmask isn\u0027t it updated dynamically once you been used the plane/assigned to something to it to scan-out? If so, isn\u0027t \"shared\" actually a misdemeanour? As a client is using it, no-one can use it, which technically means they can\u0027t really be shared. I feel that maybe compatible, like the kernel explains, it might be a better choice of words, that actually sharing it, as no two client can use simultaneously right? \n\n\u003e Ah, drm-lease-manager doesn\u0027t use universal planes, so primary and cursor planes are assigned by the kernel\n\nGlancing over the kernel documentation it seems that primary plane can also be compatible with multiple CRTCs. There has as many primary planes as there are CRTCs. If the client can make use of it why not? And obviously can\u0027t light up a CRTC with a primary one, but if not in use, maybe it is worth adding? \n\n\u003e This setting is only used for overlay planes. I\u0027ll update the description to make it more explicit. Maybe it\u0027s a good idea to change the configuration key from `planes` to `overlay_planes` or `overlays`.\n\nUhum, well if that\u0027s the case then yes, self-documenting variables are awesome üëç",
      "parentUuid": "8278365d_64cfedd6",
      "revId": "f7015bda925aad42da90f992545020e947a0d5ce",
      "serverId": "2db66874-6d0c-4434-a3ad-56d904acc56e",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bb1a5de_4aed3f5a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 163
      },
      "writtenOn": "2022-04-15T08:48:55Z",
      "side": 1,
      "message": "\u003e \u003e shared planes\n\u003e \n\u003e As a client is using it, no-one can use it, which technically means they can\u0027t really be shared. I feel that maybe compatible, like the kernel explains, it might be a better choice of words, that actually sharing it, as no two client can use simultaneously right? \n\nYes, that\u0027s true, there is no sharing in that the planes are in use from two clients at the same time. In than sense \"compatible\" sounds good.  I\u0027ll update the commit message.\n\n\u003e \n\u003e \u003e Ah, drm-lease-manager doesn\u0027t use universal planes, so primary and cursor planes are assigned by the kernel\n\u003e \n\u003e Glancing over the kernel documentation it seems that primary plane can also be compatible with multiple CRTCs. There has as many primary planes as there are CRTCs. If the client can make use of it why not? And obviously can\u0027t light up a CRTC with a primary one, but if not in use, maybe it is worth adding? \n\nJust a matter of enabling universal planes, really. It should be easy enough to do, though I don\u0027t have any hardware with primary planes compatible with multiple CRTCs.\n\n\u003e \n\u003e \u003e This setting is only used for overlay planes. I\u0027ll update the description to make it more explicit. Maybe it\u0027s a good idea to change the configuration key from `planes` to `overlay_planes` or `overlays`.\n\u003e \n\u003e Uhum, well if that\u0027s the case then yes, self-documenting variables are awesome üëç\n\nWell if universal planes is enabled, the current name would be better.",
      "parentUuid": "7402dd6d_6ee13557",
      "revId": "f7015bda925aad42da90f992545020e947a0d5ce",
      "serverId": "2db66874-6d0c-4434-a3ad-56d904acc56e",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b1d4fda_e2dbe22a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 163
      },
      "writtenOn": "2022-04-25T01:29:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9bb1a5de_4aed3f5a",
      "revId": "f7015bda925aad42da90f992545020e947a0d5ce",
      "serverId": "2db66874-6d0c-4434-a3ad-56d904acc56e",
      "unresolved": false
    }
  ]
}